# .github/workflows/rails_ci.yml


# .github/workflows/ci.yml

name: CI
on: [push, pull_request]
jobs:
  test:
    runs-on: ubuntu-latest
    services:
      db:
        image: postgres:11
        ports: ['5432:5432']
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      redis:
        image: redis
        ports: ['6379:6379']
        options: --entrypoint redis-server

    steps:
      - uses: actions/checkout@v1
      - name: Setup Ruby
        uses: actions/setup-ruby@v1
        with:
          ruby-version: 2.5.8
      - uses: borales/actions-yarn@v2.0.0
        with:
          cmd: install
      - name: Build and run tests
        env:
          DATABASE_URL: postgres://postgres:@localhost:5432/test
          REDIS_URL: redis://localhost:6379/0
          RAILS_ENV: test
          RAILS_MASTER_KEY: ${{ secrets.RAILS_MASTER_KEY }}
        run: |
          sudo apt-get -yqq install libpq-dev
          gem install bundler
          bundle install --jobs 4 --retry 3
          bundle exec rails db:prepare
          bundle exec rails test

# name: Rails CI

# on:
#   push:
#   pull_request:

# jobs:
#   test:
#     runs-on: ubuntu-latest
#     env:
#       POSTGRES_USER: mypostgresuser  # Set the PostgreSQL superuser username
#       POSTGRES_PASSWORD: mysecretpassword  # Set the PostgreSQL superuser password
#       POSTGRES_DB: test_app_development  # Set the development database name

#     services:
#       db:
#         image: postgres:14.9
#         ports:
#           - '5432:5432'
#         options: >-
#           --health-cmd pg_isready
#           --health-interval 10s
#           --health-timeout 5s
#           --health-retries 5

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v2

#       - name: Set up Ruby
#         uses: ruby/setup-ruby@v1
#         with:
#           ruby-version: 2.5.8  # Change to your desired Ruby version

#       - name: Set up Node.js
#         uses: actions/setup-node@v2
#         with:
#           node-version: 14  # Change to your desired Node.js version
      
#       - name: Start PostgreSQL Service
#         run: sudo service postgresql start 
      
#       - name: Build and run test
#         env: 
#           DATABASE_URL: postgres://mypostgresuser:mysecretpassword@localhost:5432/test_app_development
#           RAILS_ENV: test
#           # RAILS_MASTER_KEY: ${{ secrets.RAILS_MASTER_KEY }}
#         run: |
#           gem install bundler -v 2.3.26
#           bundle install
#           yarn install

#       - name: Run tests
#         run: |
#           bundle exec rails db:create
#           bundle exec rails db:migrate
#           bundle exec rspec

# name: CI
# on:

#   push:
#     branches: [ master ]
#   pull_request:
#     branches: [ master ]

# jobs:
#   test:
#     runs-on: ubuntu-latest

#     services: 
#       postgres:
#         image: postgres:12
#         env:
#           POSTGRES_PASSWORD: postgres
#         ports: ['5432:5432']

#     steps:
#       - uses: actions/checkout@v2
#       - name: Setup Ruby
#         uses: ruby/setup-ruby@v1.80.0
#         with:
#           ruby-version: 2.5.8

#       - uses: Borales/actions-yarn@v2.3.0
#         with:
#           cmd: install

#       - name: Install Dependencies
#         run: |
#           sudo apt install -yqq libpq-dev
#           gem install bundler

#       - name: Install Gems
#         run: |
#           bundle install

#       - name: Setup database
#         env:
#           PG_DATABASE: postgres
#           PG_HOST: localhost
#           PG_USER: postgres
#           PG_PASSWORD: password
#           RAILS_ENV: test
#           WITH_COVERAGE: true
#           DISABLE_SPRING: 1
#         run: |
#           bundle exec rails db:prepare
#           bundle exec rake test

#       - name: Build and test with rspec
#         env:
#           PG_DATABASE: postgres
#           PG_HOST: localhost
#           PG_USER: postgres
#           PG_PASSWORD: password
#           RAILS_ENV: test
#         run: |
#           bundle exec rspec spec

#       - name: Create Coverage Artifact
#         uses: actions/upload-artifact@v2
#         with:
#           name: code-coverage
#           path: coverage/

